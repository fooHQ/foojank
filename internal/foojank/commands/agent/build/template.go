package build

import (
	"bytes"
	"text/template"
)

type templateDataUser struct {
	JWT     string
	KeySeed string
}

type templateDataService struct {
	Name    string
	Version string
}

type templateData struct {
	Servers          []string
	TLSCACertificate string
	User             templateDataUser
	Service          templateDataService
}

const templateString = `// Code generated by go generate; DO NOT EDIT.
package config

var (
	Servers = []string{
	{{- range .Servers }}
		"{{ . }}",
	{{- end }}
	}
	TLSCACertificate = "{{ .TLSCACertificate }}"
	UserJWT = "{{ .User.JWT }}"
	UserKeySeed = "{{ .User.KeySeed }}"
	ServiceName = "{{ .Service.Name }}"
	ServiceVersion = "{{ .Service.Version }}"
)
`

func RenderTemplate(tstr string, data any) ([]byte, error) {
	tpl, err := template.New("template").Parse(tstr)
	if err != nil {
		return nil, err
	}

	buf := bytes.NewBuffer(nil)
	err = tpl.Execute(buf, data)
	if err != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}
