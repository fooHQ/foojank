package main

import (
	"encoding/json"
	"os"
	"text/template"
)

var input = `// Code generated by go generate; DO NOT EDIT.
package config

const (
	NatsURL = "{{ .Nats.URL }}"
	NatsUser = "{{ .Nats.User }}"
	NatsPassword = "{{ .Nats.Password }}"
)

const (
	ConnectorName = "{{ .Connector.Name }}"
	ConnectorVersion = "{{ .Connector.Version }}"
)
`

type Data struct {
	Nats      DataNats      `json:"nats"`
	Connector DataConnector `json:"connector"`
}

type DataNats struct {
	URL      string `json:"url"`
	User     string `json:"user"`
	Password string `json:"password"`
}

type DataConnector struct {
	Name    string `json:"name"`
	Version string `json:"version"`
}

func main() {
	b, err := os.ReadFile(os.Args[1])
	if err != nil {
		panic(err)
	}

	var data Data
	err = json.Unmarshal(b, &data)
	if err != nil {
		panic(err)
	}

	tpl, err := template.New("config.go").Parse(input)
	if err != nil {
		panic(err)
	}

	f, err := os.Create(os.Args[2])
	if err != nil {
		panic(err)
	}

	err = tpl.Execute(f, data)
	if err != nil {
		panic(err)
	}
}
